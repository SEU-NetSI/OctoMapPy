
from OctoTree import OctoTree
from Config import TREE_CENTER, TREE_RESOLUTION, TREE_MAX_DEPTH
from Inputter import Inputter


# def display_tree():
    # test_point_list = [(110,110,110),(30,30,30),(110,110,110),(30,30,30),(110,110,110),(30,30,30),(110,110,110),(30,30,30),(110,110,110),(30,30,30),(110,110,110),(30,30,30)]
    # test_point_list = [(-10,-20,-30),(-10,-20,-30),(-10,-20,-30),(-10,-20,-30),(-10,-20,-30)]
    # test_point_list = [(30, 30, 30), (30, 30, 30), (30, 30, 30), (30, 30, 30), (30, 30, 30),(-10,-20,-30),(-10,-20,-30),(-10,-20,-30),(-10,-20,-30),(-10,-20,-30)]
    # # test_point_list = [(0,0,100),(4,0,100),(8,0,100),(12,0,100),(16,0,100),(16,4,100),(16,8,100),(16,12,100),(16,16,100),(12,16,100),(8,16,100),(4,16,100),(0,16,100),(0,20,100),(0,24,100),(0,28,100),(0,32,100),(4,32,100),(8,32,100),(12,32,100),(16,32,100),(0,0,100),(4,0,100),(8,0,100),(12,0,100),(16,0,100),(16,4,100),(16,8,100),(16,12,100),(16,16,100),(12,16,100),(8,16,100),(4,16,100),(0,16,100),(0,20,100),(0,24,100),(0,28,100),(0,32,100),(4,32,100),(8,32,100),(12,32,100),(16,32,100),(0,0,100),(4,0,100),(8,0,100),(12,0,100),(16,0,100),(16,4,100),(16,8,100),(16,12,100),(16,16,100),(12,16,100),(8,16,100),(4,16,100),(0,16,100),(0,20,100),(0,24,100),(0,28,100),(0,32,100),(4,32,100),(8,32,100),(12,32,100),(16,32,100),(0,0,100),(4,0,100),(8,0,100),(12,0,100),(16,0,100),(16,4,100),(16,8,100),(16,12,100),(16,16,100),(12,16,100),(8,16,100),(4,16,100),(0,16,100),(0,20,100),(0,24,100),(0,28,100),(0,32,100),(4,32,100),(8,32,100),(12,32,100),(16,32,100),(0,0,100),(4,0,100),(8,0,100),(12,0,100),(16,0,100),(16,4,100),(16,8,100),(16,12,100),(16,16,100),(12,16,100),(8,16,100),(4,16,100),(0,16,100),(0,20,100),(0,24,100),(0,28,100),(0,32,100),(4,32,100),(8,32,100),(12,32,100),(16,32,100),(0,0,100),(4,0,100),(8,0,100),(12,0,100),(16,0,100),(16,4,100),(16,8,100),(16,12,100),(16,16,100),(12,16,100),(8,16,100),(4,16,100),(0,16,100),(0,20,100),(0,24,100),(0,28,100),(0,32,100),(4,32,100),(8,32,100),(12,32,100),(16,32,100)]
    # myTree = OctoTree(TREE_CENTER, TREE_RESOLUTION, TREE_MAX_DEPTH)
    # for test_point in test_point_list:
    #     myTree.ray_casting(TREE_CENTER, test_point)
    # myTree.visualize()

    # start_point_list = [(5, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (5, 1, 0), (5, 0, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 0, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0), (6, 1, 0)]
    # end_point_list = [(25, 1, 0), (26, 1, 0), (26, 1, 0), (26, 1, 0), (26, 1, 0), (26, 1, 0), (26, 1, 0), (26, 1, 0), (25, 1, 0), (25, 1, 0), (25, 0, 0), (26, 1, 0), (26, 1, 0), (26, 1, 0), (26, 1, 0), (25, 1, 0), (26, 1, 0), (26, 1, 0), (26, 1, 0), (26, 1, 0), (26, 1, 0), (26, 1, 0), (26, 1, 0), (26, 1, 0), (26, 1, 0), (26, 1, 0), (26, 1, 0), (26, 1, 0), (26, 1, 0), (27, 1, 0), (27, 1, 0), (28, 1, 0), (29, 1, 0), (31, 1, 0), (32, 1, 0), (33, 1, 0), (34, 1, 0), (34, 1, 0), (35, 1, 0), (36, 1, 0), (38, 1, 0), (39, 1, 0), (39, 1, 0), (40, 0, 0), (41, 1, 0), (42, 1, 0), (42, 1, 0), (43, 1, 0), (43, 1, 0), (44, 1, 0), (44, 1, 0), (44, 1, 0), (45, 1, 0), (45, 1, 0), (45, 1, 0), (45, 1, 0), (46, 1, 0), (46, 1, 0), (46, 1, 0), (46, 1, 0), (47, 1, 0), (47, 1, 0), (47, 1, 0), (47, 1, 0), (47, 1, 0), (47, 1, 0), (47, 1, 0), (47, 1, 0), (47, 1, 0), (47, 1, 0), (46, 1, 0), (45, 1, 0), (44, 1, 0), (43, 1, 0), (41, 1, 0), (39, 1, 0), (39, 1, 0), (38, 1, 0), (37, 1, 0), (36, 1, 0), (35, 1, 0), (34, 1, 0), (32, 1, 0), (32, 1, 0), (31, 1, 0), (30, 1, 0), (30, 1, 0), (30, 1, 0), (29, 1, 0), (29, 1, 0), (29, 1, 0), (28, 1, 0), (28, 1, 0), (27, 1, 0), (27, 1, 0), (27, 1, 0), (27, 1, 0), (27, 1, 0), (27, 1, 0), (27, 1, 0)]
    # myTree = OctoTree(TREE_CENTER, TREE_RESOLUTION, TREE_MAX_DEPTH)
    # for index in range(len(end_point_list)):
    #     myTree.ray_casting(start_point_list[index], end_point_list[index])
    # myTree.visualize()    
    

def test_log():
    # display_tree()
    input = Inputter()

if __name__=="__main__":
    test_log()